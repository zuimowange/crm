<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bingsin.crm.dao.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.bingsin.crm.po.Customer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="wechat" jdbcType="VARCHAR" property="wechat" />
    <result column="referee" jdbcType="INTEGER" property="referee" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="input_person" jdbcType="INTEGER" property="inputPerson" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <resultMap id="BaseResultMapVo" type="com.bingsin.crm.vo.customer.CustomerVo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="wechat" jdbcType="VARCHAR" property="wechat" />
    <result column="referee" jdbcType="INTEGER" property="referee" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="input_person" jdbcType="INTEGER" property="inputPerson" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="referee_name" jdbcType="VARCHAR" property="refereeName" />
    <result column="input_person_name" jdbcType="VARCHAR" property="inputPersonName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, customer_name, telephone, qq, email, wechat, referee, time, sex, input_person, 
    remarks
  </sql>
  <select id="selectByExample" parameterType="com.bingsin.crm.po.CustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bingsin.crm.po.CustomerExample">
    delete from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bingsin.crm.po.Customer">
    insert into customer (id, customer_name, telephone, 
      qq, email, wechat, 
      referee, time, sex, 
      input_person, remarks)
    values (#{id,jdbcType=INTEGER}, #{customerName,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}, 
      #{referee,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{sex,jdbcType=CHAR}, 
      #{inputPerson,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bingsin.crm.po.Customer">
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="wechat != null">
        wechat,
      </if>
      <if test="referee != null">
        referee,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="inputPerson != null">
        input_person,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="referee != null">
        #{referee,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="inputPerson != null">
        #{inputPerson,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bingsin.crm.po.CustomerExample" resultType="java.lang.Long">
    select count(*) from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update customer
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.customerName != null">
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.wechat != null">
        wechat = #{record.wechat,jdbcType=VARCHAR},
      </if>
      <if test="record.referee != null">
        referee = #{record.referee,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.inputPerson != null">
        input_person = #{record.inputPerson,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update customer
    set id = #{record.id,jdbcType=INTEGER},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      wechat = #{record.wechat,jdbcType=VARCHAR},
      referee = #{record.referee,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP},
      sex = #{record.sex,jdbcType=CHAR},
      input_person = #{record.inputPerson,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bingsin.crm.po.Customer">
    update customer
    <set>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="referee != null">
        referee = #{referee,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="inputPerson != null">
        input_person = #{inputPerson,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bingsin.crm.po.Customer">
    update customer
    set customer_name = #{customerName,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      referee = #{referee,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=CHAR},
      input_person = #{inputPerson,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="findByTelephone" parameterType="com.bingsin.crm.po.Customer" resultMap="BaseResultMap">
    select telephone from customer where telephone = #{telephone} limit 1
  </select>
  
   <!-- 分页查询 -->
  <select id="list" parameterType="com.bingsin.crm.dto.customer.CustomerDto" resultMap="BaseResultMapVo">
  	SELECT
customer.*,
`user`.user_name input_person_name,
(select customer_name from customer where referee = customer.id) referee_name
FROM
customer
INNER JOIN `user` ON customer.input_person = `user`.id
<if test="searchValue != null">
    where #{searchKey} like #{searchValue}
</if>
order by id desc
limit #{start},#{limit}
  </select>
</mapper>